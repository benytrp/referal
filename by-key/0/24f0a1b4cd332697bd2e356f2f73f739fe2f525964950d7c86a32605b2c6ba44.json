{
  "analyzer_version": "Offline analyzer v1.3.5",
  "processing_phase": "SYNTHESIS",
  "frequency_resonance": "440 Hz (A4)",
  "json_md_fusion_scroll": {
    "timestamp": "2025-08-11T15:29:53.039Z",
    "anchor_id": "24f0a1b4cd332697bd2e356f2f73f739fe2f525964950d7c86a32605b2c6ba44",
    "processing_phase": "SYNTHESIS",
    "entropy_level": 0.761,
    "contradictions_detected": 8,
    "word_count": 1528
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "const",
        "frequency": 61
      },
      {
        "theme": "await",
        "frequency": 23
      },
      {
        "theme": "function",
        "frequency": 20
      },
      {
        "theme": "query",
        "frequency": 19
      },
      {
        "theme": "recency",
        "frequency": 18
      },
      {
        "theme": "return",
        "frequency": 18
      },
      {
        "theme": "search",
        "frequency": 17
      },
      {
        "theme": "status",
        "frequency": 17
      },
      {
        "theme": "length",
        "frequency": 14
      },
      {
        "theme": "limit",
        "frequency": 13
      }
    ],
    "contradiction_map": [
      {
        "idx": 0,
        "sample": "ilder Pick Seed Folder Scan & Propose Query no folder This reads local artifacts (e.g., bridge-pass-trace-*.jso"
      },
      {
        "idx": 1,
        "sample": "tus = msg => ($('#ws-status').textContent = msg); const STOP = new Set(['do','not','answer','remain','silent','3/4','slower','decrease','speed','designation',"
      },
      {
        "idx": 2,
        "sample": "as,were,be,been,being,this,that,these,those,about,into,over,after,before,and,or,not,if,then,else i,you,he,she,it,we,they,me,my,your,our,their do,does,di"
      },
      {
        "idx": 3,
        "sample": "s){ const box = $('#ws-results'); if(!items.length){ box.textContent = 'No results.'; return; } const lines = items.map(r=>`â€¢ [${r.source||'web'}] $"
      },
      {
        "idx": 4,
        "sample": "?.runtime?.id); $('#pillExt')?.textContent = `extension: ${isExt ? 'yes' : 'no'}`; // Always wire tests/mocks, regardless of extension $('#mockTogg"
      },
      {
        "idx": 5,
        "sample": "le').checked=false; $('#ws-enable').disabled=true; // search toggle disabled if no extension status('Search disabled (no extension). You can still scan se"
      },
      {
        "idx": 6,
        "sample": "=true; // search toggle disabled if no extension status('Search disabled (no extension). You can still scan seeds, run router, use Mock mode, and save loc"
      },
      {
        "idx": 7,
        "sample": "e}`); } } async function onSave(){ if(!currentResults.length){ status('Nothing to save. Run a search first.'); return; } try{ const runRoot ="
      }
    ]
  },
  "structured_content": {
    "key_questions": [
      "const recencyTriggers = /(today|latest|now|current|price|version|update|ceo|results?",
      "const entityHint = /[A-Z][a-z]+(?",
      ":\\s+[A-Z][a-z]+)*|\\b(v?",
      "const multiTopic = /(?",
      "test(t) ?",
      "length ?",
      "chrome?",
      "runtime?",
      "$('#pillExt')?",
      "textContent = `extension: ${isExt ?",
      "$('#mockToggle')?",
      "checked; status(`Mock mode ${mockMode?",
      "$('#btnSelfTests')?",
      "if(j?",
      "if(j?"
    ],
    "summary": "const, await, function, query, recency"
  },
  "sentiment_indicators": {
    "positive": 0,
    "negative": 0,
    "uncertainty": 1
  },
  "temporal_markers": [
    "today",
    "will",
    "was",
    "were",
    "2025"
  ],
  "metadata": {
    "source_name": "aeon_web_seed_integrated_local_pipeline_router_html (1).html",
    "relative_path": "aeon_web_seed_integrated_local_pipeline_router_html (1).html",
    "size_bytes": 16682,
    "extract_method": "domparser",
    "focus_preset": "explore",
    "confidence": 0.83
  }
}
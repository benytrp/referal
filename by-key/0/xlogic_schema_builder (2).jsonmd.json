{
  "analyzer_version": "Offline analyzer v1.0 (merged)",
  "processing_phase": "SYNTHESIS",
  "frequency_resonance": "440 Hz (A4)",
  "json_md_fusion_scroll": {
    "timestamp": "2025-08-11T18:47:29.932Z",
    "anchor_id": "44b23fd811a2fadc7ecf71b9beca5e466e17fb4542927057f8dc3d41e600cfa8",
    "processing_phase": "SYNTHESIS",
    "entropy_level": 0.57,
    "contradictions_detected": 5,
    "word_count": 2303
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "document",
        "frequency": 63
      },
      {
        "theme": "const",
        "frequency": 59
      },
      {
        "theme": "getelementbyid",
        "frequency": 47
      },
      {
        "theme": "entropy",
        "frequency": 38
      },
      {
        "theme": "value",
        "frequency": 37
      },
      {
        "theme": "phases",
        "frequency": 35
      },
      {
        "theme": "phase",
        "frequency": 35
      },
      {
        "theme": "div",
        "frequency": 34
      },
      {
        "theme": "operations",
        "frequency": 32
      },
      {
        "theme": "input",
        "frequency": 30
      }
    ],
    "contradiction_map": [
      {
        "idx": 0,
        "sample": "Complex (5-15 cycles) Adaptive (No fixed limit)"
      },
      {
        "idx": 1,
        "sample": "s[presetName]; if (!preset) { console.error('Preset not found:', presetName); return; } //"
      },
      {
        "idx": 2,
        "sample": "tion_name\" class=\"operation-name-input\" style=\"background: transparent; border: none; font-weight: 600; color: #10b981;\"> <button class="
      },
      {
        "idx": 3,
        "sample": "lexibility\" ], adaptive: [ \"No fixed cycle limits - system adapts to task complexity\", \""
      },
      {
        "idx": 4,
        "sample": "'block'; } else { errorsContainer.style.display = 'none'; alert('âœ… Schema validation passed! Your schema is ready t"
      }
    ]
  },
  "structured_content": {
    "key_questions": [
      "?",
      "?",
      "?",
      "?",
      "?",
      "?",
      "?",
      "?",
      "?",
      "?",
      "const phaseName = phaseData?",
      "const phaseEntropy = phaseData?",
      "const phaseParallel = phaseData?",
      "== undefined ?",
      "const phaseOps = phaseData?"
    ],
    "summary": "document, const, getelementbyid, entropy, value"
  },
  "sentiment_indicators": {
    "positive": 6,
    "negative": 12,
    "uncertainty": 0
  },
  "temporal_markers": [
    "will"
  ],
  "metadata": {
    "source_name": "xlogic_schema_builder (2).html",
    "relative_path": "xlogic_schema_builder (2).html",
    "size_bytes": 54557,
    "extract_method": "domparser",
    "focus_preset": "explore",
    "confidence": 0.76
  }
}
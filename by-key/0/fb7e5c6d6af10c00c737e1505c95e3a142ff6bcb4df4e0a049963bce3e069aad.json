{
  "analyzer_version": "Offline analyzer v1.3.5",
  "processing_phase": "SYNTHESIS",
  "frequency_resonance": "440 Hz (A4)",
  "json_md_fusion_scroll": {
    "timestamp": "2025-08-11T05:52:43.677Z",
    "anchor_id": "fb7e5c6d6af10c00c737e1505c95e3a142ff6bcb4df4e0a049963bce3e069aad",
    "processing_phase": "SYNTHESIS",
    "entropy_level": 0.686,
    "contradictions_detected": 2,
    "word_count": 358
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "output",
        "frequency": 14
      },
      {
        "theme": "data",
        "frequency": 13
      },
      {
        "theme": "const",
        "frequency": 10
      },
      {
        "theme": "div",
        "frequency": 9
      },
      {
        "theme": "document",
        "frequency": 8
      },
      {
        "theme": "showstatus",
        "frequency": 8
      },
      {
        "theme": "json",
        "frequency": 7
      },
      {
        "theme": "jsoninput",
        "frequency": 6
      },
      {
        "theme": "getelementbyid",
        "frequency": 6
      },
      {
        "theme": "outputcontainer",
        "frequency": 6
      }
    ],
    "contradiction_map": [
      {
        "idx": 0,
        "sample": "e.display = 'block'; setTimeout(() => statusEl.style.display = 'none', 5000); } function parseAndRender(jsonText) {"
      },
      {
        "idx": 1,
        "sample": "t || outputText.includes('Waiting for data')) { showStatus('No formatted output to copy.', true); return;"
      }
    ]
  },
  "structured_content": {
    "key_questions": [
      "className = 'status ' + (isError ?"
    ],
    "summary": "output, data, const, div, document"
  },
  "sentiment_indicators": {
    "positive": 1,
    "negative": 0,
    "uncertainty": 0
  },
  "temporal_markers": [
    "2025"
  ],
  "metadata": {
    "source_name": "translate.html",
    "relative_path": "translate.html",
    "size_bytes": 9161,
    "extract_method": "domparser",
    "focus_preset": "explore",
    "confidence": 0.76
  }
}
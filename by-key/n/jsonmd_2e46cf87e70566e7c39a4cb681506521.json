{
  "json_md_fusion_scroll": {
    "version": "unified-2.1",
    "timestamp": "2025-08-12T23:24:18.970Z",
    "source_text_length": 2295,
    "word_count": 281,
    "sentence_count": 13,
    "entropy_level": 0.96,
    "contradictions_detected": 0,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "json_md_fusion",
    "source": {
      "filename": "fusion_output_2025-08-04T00-01-06.md"
    },
    "anchor_id": "2e46cf87e70566e7c39a4cb681506521"
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "statement",
        "frequency": 10
      },
      {
        "theme": "const",
        "frequency": 6
      },
      {
        "theme": "flex",
        "frequency": 6
      },
      {
        "theme": "html",
        "frequency": 5
      },
      {
        "theme": "margin",
        "frequency": 5
      },
      {
        "theme": "occurrences",
        "frequency": 4
      },
      {
        "theme": "contradictions",
        "frequency": 4
      },
      {
        "theme": "field",
        "frequency": 4
      },
      {
        "theme": "valraw",
        "frequency": 4
      },
      {
        "theme": "background",
        "frequency": 4
      },
      {
        "theme": "16px",
        "frequency": 4
      },
      {
        "theme": "total",
        "frequency": 4
      }
    ],
    "key_questions": [
      "467Z\n\n## Content Analysis\n\n### Main Themes\n- **patterns** (8 occurrences)\n- **contradictions** (20 occurrences)\n- **evolution** (10 occurrences)\n- **systems** (3 occurrences)\n\n### Key Questions\n- match) return null;\n  const [, field, op, valRaw] = match;\n  // Map 'entropy' → 'contradiction_entropy' in model\n  const fieldMap = { entropy: 'contradiction_entropy' };\n  const normField = fieldMap[field] || field;\n  // Number if possible\n  let value = isNaN(valRaw) ? valRaw : parseFloat(valRaw);\n  // Build test function\n  return (scroll) => {\n    let scrollVal;\n    // Support main fields in json_md_fusion_scroll\n    if (scroll\n- artifact) return;\n  const blob = new Blob([artifact], { type: type === 'html'",
      "? 'text/html' : 'application/json' });\n  const url = URL\n- com/css2",
      "?family=Inter:wght@400;500;700&display=swap\" rel=\"stylesheet\"/>\n  <style>\n    body { font-family: 'Inter',sans-serif; background: #F5F5DC; color: #000; margin:0; }\n    h1 { text-align:center; color: #333;}\n    #main-container { display: flex; flex-wrap: wrap; gap: 2rem; max-width: 1280px; margin:auto;}\n    #chatbox { flex:2; min-width:320px; max-width:600px; border:1px solid #8D6E63; background:#FFF8E1; border-radius: 8px; padding:20px 16px 16px 16px; display: flex; flex-direction:column; height: 70vh; }\n    #chat-log { flex:1; overflow-y:auto; margin-bottom:16px;}\n- height);\n      const angle = (total > 0)",
      "? ((contradictions / total) * 2 * Math\n- fillText(`Entropy: ${ (total",
      "?  (contradictions/total)\n\n### Contradictions Detected\n1"
    ],
    "pattern_recognition": [],
    "contradiction_map": [],
    "sentiment_indicators": {
      "positive": 0,
      "negative": 0,
      "uncertainty": 0
    },
    "temporal_markers": {
      "past": 0,
      "present": 0,
      "future": 0
    }
  },
  "structured_content": {
    "summary": "# JSON_MD Fusion Output\n\n**Generated:** 2025-08-04T00:00:22 … ∴ ↱ ↰ ∴</p>\n</body>\n</html>",
    "key_insights": [],
    "action_items": [
      "valRaw : parseFloat(valRaw);\n  // Build test function\n  return (scroll) => {\n    let scrollVal;\n    // Support main fields in json_md_fusion_scroll\n    if (scroll\n- artifact) return;\n  const blob = new Blob([artifact], { type: type === 'html'"
    ],
    "unresolved_tensions": []
  },
  "metadata": {
    "fusion_methodology": "Unified Offline Engine",
    "confidence_level": 0.52,
    "recommended_next_steps": [
      "Review 0 insights",
      "Execute 1 actions"
    ],
    "recursive_potential": "Medium",
    "text_sha256": "2e46cf87e70566e7c39a4cb681506521"
  }
}
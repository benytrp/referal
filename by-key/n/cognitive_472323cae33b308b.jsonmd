{
  "json_md_fusion_scroll": {
    "version": "cognitive-2.0",
    "timestamp": "2025-08-11T05:05:39.308Z",
    "source_text_length": 33759,
    "word_count": 2817,
    "sentence_count": 333,
    "cognitive_mode": "unified",
    "processing_depth": "standard",
    "analysis_threshold": 0.6,
    "anchor_id": "472323cae33b308b995f3612d1045cbd",
    "entropy_level": 0.878,
    "contradictions_detected": 3,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "cognitive_jsonmd_fusion",
    "source_metadata": {
      "filename": "xlogic_analyzer.html",
      "processing_timestamp": "2025-08-11T05:05:39.308Z",
      "scanner_version": "Cognitive JSONMD Working Edition"
    }
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "class",
        "frequency": 49,
        "significance": "0.0174",
        "examples": [
          "class=\"container\">\n"
        ]
      },
      {
        "theme": "verification",
        "frequency": 46,
        "significance": "0.0163",
        "examples": [
          "\"verification\":"
        ]
      },
      {
        "theme": "const",
        "frequency": 41,
        "significance": "0.0146",
        "examples": [
          ".constraint-violation"
        ]
      },
      {
        "theme": "color",
        "frequency": 39,
        "significance": "0.0138",
        "examples": [
          "color:"
        ]
      },
      {
        "theme": "entropy",
        "frequency": 34,
        "significance": "0.0121",
        "examples": [
          ".entropy"
        ]
      },
      {
        "theme": "margin",
        "frequency": 33,
        "significance": "0.0117",
        "examples": [
          "margin:"
        ]
      },
      {
        "theme": "rgba",
        "frequency": 32,
        "significance": "0.0114",
        "examples": [
          "rgba(15,"
        ]
      },
      {
        "theme": "document",
        "frequency": 31,
        "significance": "0.0110",
        "examples": [
          "onclick=\"document.getElementById('fileInput').click()\""
        ]
      },
      {
        "theme": "font",
        "frequency": 30,
        "significance": "0.0106",
        "examples": [
          "font-family:"
        ]
      },
      {
        "theme": "metrics",
        "frequency": 29,
        "significance": "0.0103",
        "examples": [
          ".metrics-grid"
        ]
      },
      {
        "theme": "border",
        "frequency": 26,
        "significance": "0.0092",
        "examples": [
          "border-box;"
        ]
      },
      {
        "theme": "1rem",
        "frequency": 26,
        "significance": "0.0092",
        "examples": [
          "1rem;\n"
        ]
      }
    ],
    "key_questions": [
      "status === 'COMPLETE' ? 'success' : 'danger');\n            \n            document",
      "total_cycles > 5 ? 'warning' : 'success');\n            \n            document",
      "8 ? 'danger' : 'success');\n            \n            document",
      "9 ? 'success' : 'warning');\n        }\n\n        function analyzeConstraints() {\n            const verification = currentExecutionData",
      "?\\d*/)[0]);\n                const violated = verification",
      "final_entropy > threshold;\n                \n                constraintHTML += `\n                    <div class=\"constraint-violation\" style=\"${violated ? '' : 'background: linear-gradient(135deg, rgba(16, 185, 129, 0",
      "3);'}\">\n                        <h4 style=\"color: ${violated ? '#ef4444' : '#10b981'}\">\n                            ${violated",
      "? '‚ö†Ô∏è' : '‚úÖ'} Entropy Constraint\n                        </h4>\n                        <div>Required: ${entropyConstraint}</div>\n                        <div>Actual: ${verification"
    ],
    "pattern_recognition": [
      "cycle",
      "repeat",
      "return"
    ],
    "contradiction_map": [
      {
        "statement_a": "push({ icon: 'üéØ', text: 'Perfect operational success d",
        "statement_b": "constraint violations - robust error handling' });\n            }\n\n            // Analyze constraint violations\n            if (",
        "line": 219,
        "tension_type": "explicit_contradiction",
        "severity": "0.64"
      },
      {
        "statement_a": "push({ icon: '‚ö°', text: 'High operational density - efficient processing d",
        "statement_b": "complexity' });\n            }\n\n            // Safety mechanism analysis\n            const safetyTrigger = ledger",
        "line": 225,
        "tension_type": "explicit_contradiction",
        "severity": "0.41"
      },
      {
        "statement_a": "'VERIFIED' : 'COMPROMISED'}\n\nBEHAVIORAL OBSERVATIONS:\n- System demonstrated controlled constraint violation\n- Entropy escalation triggered adaptive sandbox creation\n- Safety mechanisms functioned correctly\n- High operational success d",
        "statement_b": "complexity overshoot\n\nVERIFICATION SEAL: ${verification",
        "line": 301,
        "tension_type": "explicit_contradiction",
        "severity": "0.34"
      }
    ],
    "sentiment_indicators": {
      "positive": 2,
      "negative": 0,
      "uncertainty": 0
    },
    "temporal_markers": {
      "past": 0,
      "present": 5,
      "future": 1
    }
  },
  "structured_content": {
    "summary": "DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1 0\">\n    <title>X-Logic Execution Analyzer</title>\n    <script src=\"https://cdnjs...",
    "key_insights": [],
    "action_items": [
      {
        "action": "197Z\", \"entropy\": 0},\n                {\"cycle\": 1, \"phase\": \"PARALLEL\", \"op\": \"sandbox_spawn\", \"output\": \"Created sandbox_1_1754786850426 for Execute\", \"status\": \"SUCCESS\", \"timestamp\": \"2025-08-10T00:47:30",
        "urgency_score": "0.23",
        "feasibility_score": "0.59"
      },
      {
        "action": "989},\n                {\"cycle\": 2, \"phase\": \"PARALLEL\", \"op\": \"sandbox_spawn\", \"output\": \"Created sandbox_2_1754786853134 for Execute\", \"status\": \"SUCCESS\", \"timestamp\": \"2025-08-10T00:47:33",
        "urgency_score": "0.99",
        "feasibility_score": "0.50"
      },
      {
        "action": "134Z\", \"entropy\": 1},\n                {\"cycle\": 3, \"phase\": \"PARALLEL\", \"op\": \"sandbox_spawn\", \"output\": \"Created sandbox_3_1754786855863 for Execute\", \"status\": \"SUCCESS\", \"timestamp\": \"2025-08-10T00:47:35",
        "urgency_score": "0.85",
        "feasibility_score": "0.23"
      },
      {
        "action": "parse(jsonText);\n                \n                displayBasicMetrics();\n                analyzeConstraints();\n                generateInsights();\n                createVisualizations();\n                renderLedgerTimeline();\n                \n                // Show analysis panels\n                document",
        "urgency_score": "0.81",
        "feasibility_score": "0.02"
      },
      {
        "action": "innerHTML = insightHTML;\n        }\n\n        function createVisualizations() {\n            const ledger = currentExecutionData",
        "urgency_score": "0.52",
        "feasibility_score": "0.67"
      },
      {
        "action": "destroy();\n            }\n\n            // Create entropy progression chart\n            const ctx = document",
        "urgency_score": "0.10",
        "feasibility_score": "0.19"
      },
      {
        "action": "createObjectURL(blob);\n            const a = document",
        "urgency_score": "0.22",
        "feasibility_score": "0.12"
      },
      {
        "action": "createElement('a');\n            a",
        "urgency_score": "0.94",
        "feasibility_score": "0.79"
      }
    ],
    "unresolved_tensions": [
      "push({ icon: '‚ö°', text: 'High operational density - efficient processing d vs complexity' });\n            }\n\n            // Safety mechanism analysis\n            const safetyTrigger = ledger"
    ]
  },
  "cognitive_analysis": {
    "novelty_index": 1,
    "cognitive_load_estimate": 1,
    "recursive_potential": "Medium",
    "meta_patterns": [
      "15 themes, 3 tensions"
    ]
  },
  "metadata": {
    "fusion_methodology": "Comprehensive Cognitive Analysis Engine",
    "confidence_level": "0.27",
    "recommended_next_steps": [
      "Continue unified analysis",
      "Review 0 insights",
      "Execute 8 actions"
    ],
    "recursive_potential": "Medium",
    "text_sha256": "472323cae33b308b995f3612d1045cbd"
  }
}
{
  "json_md_fusion_scroll": {
    "version": "cognitive-2.0",
    "timestamp": "2025-08-11T05:02:18.381Z",
    "source_text_length": 6800,
    "word_count": 816,
    "sentence_count": 67,
    "cognitive_mode": "unified",
    "processing_depth": "standard",
    "analysis_threshold": 0.6,
    "anchor_id": "0d82369eeaed5ce66fef56e22dd41e15",
    "entropy_level": 0.841,
    "contradictions_detected": 0,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "cognitive_jsonmd_fusion",
    "source_metadata": {
      "filename": "jsonmd_7b445dbdba51ac6f69de840a0d84cf4f.json",
      "processing_timestamp": "2025-08-11T05:02:18.381Z",
      "scanner_version": "Cognitive JSONMD Working Edition"
    }
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "template",
        "frequency": 24,
        "significance": "0.0294",
        "examples": [
          "\"template\",\n"
        ]
      },
      {
        "theme": "document",
        "frequency": 18,
        "significance": "0.0221",
        "examples": [
          "\"document\",\n"
        ]
      },
      {
        "theme": "html",
        "frequency": 17,
        "significance": "0.0208",
        "examples": [
          "(1).html\",\n"
        ]
      },
      {
        "theme": "data",
        "frequency": 14,
        "significance": "0.0172",
        "examples": [
          "\"basedatatext\",\n"
        ]
      },
      {
        "theme": "getelementbyid",
        "frequency": 12,
        "significance": "0.0147",
        "examples": [
          "\"getelementbyid\",\n"
        ]
      },
      {
        "theme": "basedatatext",
        "frequency": 12,
        "significance": "0.0147",
        "examples": [
          "\"basedatatext\",\n"
        ]
      },
      {
        "theme": "step",
        "frequency": 12,
        "significance": "0.0147",
        "examples": [
          "Step"
        ]
      },
      {
        "theme": "value",
        "frequency": 10,
        "significance": "0.0123",
        "examples": [
          "\"value\",\n"
        ]
      },
      {
        "theme": "json",
        "frequency": 10,
        "significance": "0.0123",
        "examples": [
          "\"json_md_fusion_scroll\":"
        ]
      },
      {
        "theme": "counter",
        "frequency": 9,
        "significance": "0.0110",
        "examples": [
          "\"counter\",\n"
        ]
      },
      {
        "theme": "showstatus",
        "frequency": 9,
        "significance": "0.0110",
        "examples": [
          "showStatus('New"
        ]
      },
      {
        "theme": "theme",
        "frequency": 8,
        "significance": "0.0098",
        "examples": [
          "\"main_themes\":"
        ]
      }
    ],
    "key_questions": [
      "value = batchId; showStatus('New batch ID generated'); } function resetTemplate() { if (confirm('Reset to default template?\",\n      \"Your changes will be lost",
      "instance_seq⟧ \\\\n \\\\n \\\\n\\\\n \\\\n Work Habits \\\\n \\\\n \\\\n Item \\\\n Yes \\\\n NI \\\\n N/A \\\\n \\\\n \\\\n Attendance — Correct day and time?\",\n      \"\\\\n \\\\n Yes\\\\n \\\\n \\\\n NI\\\\n \\\\n \\\\n N/A\\\\n \\\\n \\\\n \\\\n Hygiene — Participant was appropriately groomed",
      "?\",\n      \"\\\\n \\\\n Yes\\\\n \\\\n \\\\n NI\\\\n \\\\n \\\\n N/A\\\\n \\\\n \\\\n \\\\n Attitude — Participant exhibited positive attitude",
      "?\",\n      \"\\\\n \\\\n Yes\\\\n \\\\n \\\\n NI\\\\n \\\\n \\\\n N/A\\\\n \\\\n \\\\n \\\\n Comments: \\\\n ⟦work_habits",
      "comments⟧ \\\\n \\\\n\\\\n \\\\n Preparatory Goals \\\\n \\\\n \\\\n Item \\\\n Yes \\\\n NI \\\\n N/A \\\\n \\\\n \\\\n Attention Span — adequate span for tasks?\",\n      \"\\\\n \\\\n Yes\\\\n \\\\n \\\\n NI\\\\n \\\\n \\\\n N/A\\\\n \\\\n \\\\n \\\\n Task Completion — stayed on task",
      "?\",\n      \"\\\\n \\\\n Yes\\\\n \\\\n \\\\n NI\\\\n \\\\n \\\\n N/A\\\\n \\\\n \\\\n \\\\n Safety — followed safety procedures",
      "?\"\n    ],\n    \"pattern_recognition\": [],\n    \"contradiction_map\": [],\n    \"sentiment_indicators\": {\n      \"positive\": 1,\n      \"negative\": 0,\n      \"uncertainty\": 0\n    },\n    \"temporal_markers\": {\n      \"past\": 1,\n      \"present\": 1,\n      \"future\": 1\n    }\n  },\n  \"structured_content\": {\n    \"summary\": \"E3 Master Builder - Fixed E3 Master Builder - Fixed Step 1: Setup Batch ID New Batch Counter Step 2: Base Data (Optional) JSON data to merge into all children Step 3: Template Load Default E3 Template Child Template (use ⟦token⟧ syntax) Step 4: Actions Preview Download Single Bulk Export Preview '; // Insert script before closing body tag if (html"
    ],
    "pattern_recognition": [
      "recursive",
      "return",
      "pattern"
    ],
    "contradiction_map": [],
    "sentiment_indicators": {
      "positive": 3,
      "negative": 1,
      "uncertainty": 1
    },
    "temporal_markers": {
      "past": 4,
      "present": 1,
      "future": 2
    }
  },
  "structured_content": {
    "summary": "{\n  \"json_md_fusion_scroll\": {\n    \"version\": \"1 0\",\n    \"timestamp\": \"2025-08-11T04:23:15...",
    "key_insights": [],
    "action_items": [
      {
        "action": "791,\n    \"contradictions_detected\": 0,\n    \"processing_phase\": \"SYNTHESIS\",\n    \"frequency_resonance\": \"440 Hz (A4)\",\n    \"format\": \"json_md_fusion\",\n    \"anchor_id\": \"7b445dbdba51ac6f69de840a0d84cf4f\",\n    \"source\": {\n      \"path\": \"simple_e3_builder (1)",
        "urgency_score": "0.85",
        "feasibility_score": "0.29"
      },
      {
        "action": "html\",\n      \"bytes\": 17803,\n      \"lastModified\": 1754767957845\n    }\n  },\n  \"content_analysis\": {\n    \"main_themes\": [\n      {\n        \"theme\": \"document\",\n        \"frequency\": 20\n      },\n      {\n        \"theme\": \"getelementbyid\",\n        \"frequency\": 15\n      },\n      {\n        \"theme\": \"value\",\n        \"frequency\": 13\n      },\n      {\n        \"theme\": \"template\",\n        \"frequency\": 9\n      },\n      {\n        \"theme\": \"html\",\n        \"frequency\": 9\n      },\n      {\n        \"theme\": \"function\",\n        \"frequency\": 9\n      },\n      {\n        \"theme\": \"basedatatext\",\n        \"frequency\": 9\n      },\n      {\n        \"theme\": \"counter\",\n        \"frequency\": 8\n      }\n    ],\n    \"key_questions\": [\n      \"E3 Master Builder - Fixed E3 Master Builder - Fixed Step 1: Setup Batch ID New Batch Counter Step 2: Base Data (Optional) JSON data to merge into all children Step 3: Template Load Default E3 Template Child Template (use ⟦token⟧ syntax) Step 4: Actions Preview Download Single Bulk Export Preview '; // Insert script before closing body tag if (html",
        "urgency_score": "0.29",
        "feasibility_score": "0.76"
      },
      {
        "action": "createObjectURL(blob); var a = document",
        "urgency_score": "0.76",
        "feasibility_score": "0.15"
      },
      {
        "action": "createElement('a'); a",
        "urgency_score": "0.67",
        "feasibility_score": "0.30"
      },
      {
        "action": "\",\n      \"Your changes will be lost",
        "urgency_score": "0.75",
        "feasibility_score": "0.31"
      },
      {
        "action": "parse(baseDataText); } var html = buildChild(template, data); document",
        "urgency_score": "0.52",
        "feasibility_score": "0.62"
      },
      {
        "action": "parse(baseDataText); } var html = buildChild(template, data); var filename = 'E3-Child-' + counter + '",
        "urgency_score": "0.11",
        "feasibility_score": "0.24"
      },
      {
        "action": "isArray(bulkData)) { showStatus('File must contain a JSON array', true); return; } var template = document",
        "urgency_score": "0.76",
        "feasibility_score": "0.96"
      },
      {
        "action": "\"\n    ],\n    \"pattern_recognition\": [],\n    \"contradiction_map\": [],\n    \"sentiment_indicators\": {\n      \"positive\": 1,\n      \"negative\": 0,\n      \"uncertainty\": 0\n    },\n    \"temporal_markers\": {\n      \"past\": 1,\n      \"present\": 1,\n      \"future\": 1\n    }\n  },\n  \"structured_content\": {\n    \"summary\": \"E3 Master Builder - Fixed E3 Master Builder - Fixed Step 1: Setup Batch ID New Batch Counter Step 2: Base Data (Optional) JSON data to merge into all children Step 3: Template Load Default E3 Template Child Template (use ⟦token⟧ syntax) Step 4: Actions Preview Download Single Bulk Export Preview '; // Insert script before closing body tag if (html",
        "urgency_score": "0.66",
        "feasibility_score": "0.20"
      },
      {
        "action": " … addEventListener('DOMContentLoaded', init); } else { init(); }\",\n    \"key_insights\": [],\n    \"action_items\": [\n      \"E3 Master Builder - Fixed E3 Master Builder - Fixed Step 1: Setup Batch ID New Batch Counter Step 2: Base Data (Optional) JSON data to merge into all children Step 3: Template Load Default E3 Template Child Template (use ⟦token⟧ syntax) Step 4: Actions Preview Download Single Bulk Export Preview '; // Insert script before closing body tag if (html",
        "urgency_score": "0.45",
        "feasibility_score": "0.38"
      }
    ],
    "unresolved_tensions": []
  },
  "cognitive_analysis": {
    "novelty_index": 0.9333333333333333,
    "cognitive_load_estimate": 0.34,
    "recursive_potential": "Medium",
    "meta_patterns": [
      "15 themes, 0 tensions"
    ]
  },
  "metadata": {
    "fusion_methodology": "Comprehensive Cognitive Analysis Engine",
    "confidence_level": "0.89",
    "recommended_next_steps": [
      "Continue unified analysis",
      "Review 0 insights",
      "Execute 10 actions"
    ],
    "recursive_potential": "Medium",
    "text_sha256": "0d82369eeaed5ce66fef56e22dd41e15"
  }
}
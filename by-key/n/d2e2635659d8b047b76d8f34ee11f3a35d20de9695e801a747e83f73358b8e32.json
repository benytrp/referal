{
  "analyzer_version": "Offline analyzer v1.3.5",
  "processing_phase": "SYNTHESIS",
  "frequency_resonance": "440 Hz (A4)",
  "json_md_fusion_scroll": {
    "timestamp": "2025-08-11T05:52:31.838Z",
    "anchor_id": "d2e2635659d8b047b76d8f34ee11f3a35d20de9695e801a747e83f73358b8e32",
    "processing_phase": "SYNTHESIS",
    "entropy_level": 0.772,
    "contradictions_detected": 2,
    "word_count": 1339
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "const",
        "frequency": 43
      },
      {
        "theme": "chunks",
        "frequency": 29
      },
      {
        "theme": "hashes",
        "frequency": 22
      },
      {
        "theme": "chunk",
        "frequency": 20
      },
      {
        "theme": "buf",
        "frequency": 20
      },
      {
        "theme": "body",
        "frequency": 20
      },
      {
        "theme": "title",
        "frequency": 18
      },
      {
        "theme": "document",
        "frequency": 17
      },
      {
        "theme": "length",
        "frequency": 16
      },
      {
        "theme": "text",
        "frequency": 15
      }
    ],
    "contradiction_map": [
      {
        "idx": 0,
        "sample": "ndHash() { if (S.chunks.length === 0) { D.statusBar.textContent = 'Error: No chunks to process. Please chunk the source text first.'; return; } D."
      },
      {
        "idx": 1,
        "sample": "h().\\n- Handle non-2xx with helpful messages.\\n\\n## Notes\\nWorks fully offline; no external CDNs.`; if (D.autoRun.checked) { doChunk().then(doGenerateAndHash)"
      }
    ]
  },
  "structured_content": {
    "key_questions": [
      "const data = typeof input === 'string' ?",
      "== 'object') return typeof x === 'string' ?",
      "length <= max) { buf = buf ?",
      "split(/(?",
      "?",
      "])\\s+(?",
      "length <= 80 ?",
      "length > 140 ?"
    ],
    "summary": "const, chunks, hashes, chunk, buf"
  },
  "sentiment_indicators": {
    "positive": 0,
    "negative": 0,
    "uncertainty": 0
  },
  "temporal_markers": [
    "will"
  ],
  "metadata": {
    "source_name": "ai_studio_code.html",
    "relative_path": "ai_studio_code.html",
    "size_bytes": 16755,
    "extract_method": "domparser",
    "focus_preset": "explore",
    "confidence": 0.77
  }
}
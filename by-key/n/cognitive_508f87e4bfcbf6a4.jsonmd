{
  "json_md_fusion_scroll": {
    "version": "cognitive-2.0",
    "timestamp": "2025-08-11T05:05:33.252Z",
    "source_text_length": 13059,
    "word_count": 1435,
    "sentence_count": 75,
    "cognitive_mode": "unified",
    "processing_depth": "standard",
    "analysis_threshold": 0.6,
    "anchor_id": "508f87e4bfcbf6a426a0821e86fd0c9f",
    "entropy_level": 0.896,
    "contradictions_detected": 2,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "cognitive_jsonmd_fusion",
    "source_metadata": {
      "filename": "New Text Document.txt",
      "processing_timestamp": "2025-08-11T05:05:33.252Z",
      "scanner_version": "Cognitive JSONMD Working Edition"
    }
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "classname",
        "frequency": 46,
        "significance": "0.0321",
        "examples": [
          "className=\"min-h-screen"
        ]
      },
      {
        "theme": "text",
        "frequency": 38,
        "significance": "0.0265",
        "examples": [
          "text-white"
        ]
      },
      {
        "theme": "gray",
        "frequency": 36,
        "significance": "0.0251",
        "examples": [
          "from-gray-900"
        ]
      },
      {
        "theme": "const",
        "frequency": 26,
        "significance": "0.0181",
        "examples": [
          "'lucide-react';\r\n\r\nconst"
        ]
      },
      {
        "theme": "purple",
        "frequency": 24,
        "significance": "0.0167",
        "examples": [
          "via-purple-900"
        ]
      },
      {
        "theme": "border",
        "frequency": 22,
        "significance": "0.0153",
        "examples": [
          "border"
        ]
      },
      {
        "theme": "rounded",
        "frequency": 17,
        "significance": "0.0118",
        "examples": [
          "rounded-lg"
        ]
      },
      {
        "theme": "phase",
        "frequency": 12,
        "significance": "0.0084",
        "examples": [
          "[currentPhase,"
        ]
      },
      {
        "theme": "prev",
        "frequency": 12,
        "significance": "0.0084",
        "examples": [
          "setHistory(prev"
        ]
      },
      {
        "theme": "center",
        "frequency": 12,
        "significance": "0.0084",
        "examples": [
          "className=\"text-center"
        ]
      },
      {
        "theme": "font",
        "frequency": 12,
        "significance": "0.0084",
        "examples": [
          "font-bold"
        ]
      },
      {
        "theme": "icon",
        "frequency": 10,
        "significance": "0.0070",
        "examples": [
          "icon:"
        ]
      }
    ],
    "key_questions": [
      "What is the core tension? Strip away everything except the paradox itself",
      "What new territories does this contradiction reveal? What questions emerge when you follow each thread",
      "?`,\r\n      folding: `Now FOLD these expansions back onto themselves",
      "Where do they contradict each other? What happens when you compress all possibilities into one point",
      "?`,\r\n      contradiction: `Identify the CONTRADICTIONS within your folding",
      "What cannot coexist but must?`,\r\n      paradox: `Generate NEW PARADOXES from these contradictions",
      "What did this cycle reveal about your root input? How has \"${rootInput}\" changed while remaining the same",
      "? What new cycle does this suggest"
    ],
    "pattern_recognition": [
      "cycle",
      "return",
      "spiral"
    ],
    "contradiction_map": [
      {
        "statement_a": "What cannot coexist b",
        "statement_b": "must",
        "line": 16,
        "tension_type": "explicit_contradiction",
        "severity": "0.38"
      },
      {
        "statement_a": "How has \"${rootInput}\" changed w",
        "statement_b": "remaining the same",
        "line": 22,
        "tension_type": "explicit_contradiction",
        "severity": "0.62"
      }
    ],
    "sentiment_indicators": {
      "positive": 0,
      "negative": 0,
      "uncertainty": 1
    },
    "temporal_markers": {
      "past": 1,
      "present": 4,
      "future": 0
    }
  },
  "structured_content": {
    "summary": "import React, { useState, useEffect } from 'react';\r\nimport { RefreshCw, ArrowRight, ArrowLeft, Circle, Square } from 'lucide-react';\r\n\r\nconst ParadoxEngine = () => {\r\n  const [rootInput, setRootInput] = useState('');\r\n  const [currentPhase, setCurrentPhase] = useState('input');\r\n  const [history, setHistory] = useState([]);\r\n  const [currentContent, setCurrentContent] = useState('');\r\n  const [reflections, setReflections] = useState([]);\r\n  const [cycleCount, setCycleCount] = useState(0);\r\n  const [isAtRoot, setIsAtRoot] = useState(false);\r\n\r\n  const phases = [\r\n    { id: 'input', name: 'ROOT QUESTION', icon: Circle },\r\n    { id: 'refinement', name: 'REFINEMENT', icon: Square },\r\n    { id: 'expansion', name: 'EXPANSION', icon: Circle },\r\n    { id: 'folding', name: 'FOLDING', icon: Square },\r\n    { id: 'contradiction', name: 'CONTRADICTION', icon: Circle },\r\n    { id: 'paradox', name: 'PARADOX GENERATION', icon: Square },\r\n    { id: 'reflection', name: 'META-REFLECTION', icon: Circle }\r\n  ];\r\n\r\n  const getCurrentPhaseIndex = () => {\r\n    return phases findIndex(p => p...",
    "key_insights": [],
    "action_items": [
      {
        "action": " What cannot coexist but must",
        "urgency_score": "0.25",
        "feasibility_score": "0.25"
      },
      {
        "action": " Create impossible statements that feel true",
        "urgency_score": "0.21",
        "feasibility_score": "0.33"
      }
    ],
    "unresolved_tensions": []
  },
  "cognitive_analysis": {
    "novelty_index": 1,
    "cognitive_load_estimate": 0.7029500000000001,
    "recursive_potential": "Medium",
    "meta_patterns": [
      "15 themes, 2 tensions"
    ]
  },
  "metadata": {
    "fusion_methodology": "Comprehensive Cognitive Analysis Engine",
    "confidence_level": "0.12",
    "recommended_next_steps": [
      "Continue unified analysis",
      "Review 0 insights",
      "Execute 2 actions"
    ],
    "recursive_potential": "Medium",
    "text_sha256": "508f87e4bfcbf6a426a0821e86fd0c9f"
  }
}
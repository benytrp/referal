{
  "json_md_fusion_scroll": {
    "version": "cognitive-2.0",
    "timestamp": "2025-08-11T05:05:36.325Z",
    "source_text_length": 16592,
    "word_count": 1853,
    "sentence_count": 169,
    "cognitive_mode": "unified",
    "processing_depth": "standard",
    "analysis_threshold": 0.6,
    "anchor_id": "235bd2427208b6706424f5ba90a192c6",
    "entropy_level": 0.864,
    "contradictions_detected": 0,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "cognitive_jsonmd_fusion",
    "source_metadata": {
      "filename": "simple_e3_builder.html",
      "processing_timestamp": "2025-08-11T05:05:36.325Z",
      "scanner_version": "Cognitive JSONMD Working Edition"
    }
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "data",
        "frequency": 68,
        "significance": "0.0367",
        "examples": [
          "#baseData"
        ]
      },
      {
        "theme": "class",
        "frequency": 66,
        "significance": "0.0356",
        "examples": [
          "class=\"container\">\n"
        ]
      },
      {
        "theme": "checkbox",
        "frequency": 45,
        "significance": "0.0243",
        "examples": [
          "extractCheckboxes(data)"
        ]
      },
      {
        "theme": "value",
        "frequency": 40,
        "significance": "0.0216",
        "examples": [
          "value=\"1\""
        ]
      },
      {
        "theme": "const",
        "frequency": 35,
        "significance": "0.0189",
        "examples": [
          "const"
        ]
      },
      {
        "theme": "type",
        "frequency": 30,
        "significance": "0.0162",
        "examples": [
          "<!doctype"
        ]
      },
      {
        "theme": "document",
        "frequency": 29,
        "significance": "0.0157",
        "examples": [
          "document.getElementById('status');\n"
        ]
      },
      {
        "theme": "input",
        "frequency": 26,
        "significance": "0.0140",
        "examples": [
          "input,"
        ]
      },
      {
        "theme": "template",
        "frequency": 23,
        "significance": "0.0124",
        "examples": [
          "#template"
        ]
      },
      {
        "theme": "function",
        "frequency": 22,
        "significance": "0.0119",
        "examples": [
          "functions\nfunction"
        ]
      },
      {
        "theme": "getelementbyid",
        "frequency": 22,
        "significance": "0.0119",
        "examples": [
          "document.getElementById('status');\n"
        ]
      },
      {
        "theme": "html",
        "frequency": 21,
        "significance": "0.0113",
        "examples": [
          "html>\n<html"
        ]
      }
    ],
    "key_questions": [
      "className = 'status ' + (isError ? 'error' : 'success');\n}\n\nfunction replaceTokens(template, data) {\n  return template",
      "');\n    let value = data;\n    \n    for (let key of path) {\n      if (value && typeof value === 'object' && key in value) {\n        value = value[key];\n      } else {\n        return ''; // Token not found, return empty\n      }\n    }\n    \n    return value == null ? '' : String(value);\n  });\n}\n\nfunction extractCheckboxes(data) {\n  const result = {};\n  \n  function scan(obj, prefix = '') {\n    for (let key in obj) {\n      if (",
      "hasOwnProperty(key)) continue;\n      \n      const fullKey = prefix ? prefix + '",
      "instance_seq⟧</div>\n    </div>\n  </div>\n\n  <div class=\"section\">\n    <h3>Work Habits</h3>\n    <table>\n      <tr>\n        <th style=\"width: 50%;\">Item</th>\n        <th>Yes</th>\n        <th>NI</th>\n        <th>N/A</th>\n      </tr>\n      <tr>\n        <td>Attendance — Correct day and time?</td>\n        <td class=\"checkbox-cell\">\n          <input type=\"checkbox\" data-key=\"work_habits",
      "correct_day_time\" data-opt=\"na\"> N/A\n        </td>\n      </tr>\n      <tr>\n        <td>Hygiene — Participant was appropriately groomed?</td>\n        <td class=\"checkbox-cell\">\n          <input type=\"checkbox\" data-key=\"work_habits",
      "hygiene\" data-opt=\"na\"> N/A\n        </td>\n      </tr>\n      <tr>\n        <td>Attitude — Participant exhibited positive attitude?</td>\n        <td class=\"checkbox-cell\">\n          <input type=\"checkbox\" data-key=\"work_habits",
      "comments⟧</div>\n  </div>\n\n  <div class=\"section\">\n    <h3>Preparatory Goals</h3>\n    <table>\n      <tr>\n        <th style=\"width: 50%;\">Item</th>\n        <th>Yes</th>\n        <th>NI</th>\n        <th>N/A</th>\n      </tr>\n      <tr>\n        <td>Attention Span — adequate span for tasks?</td>\n        <td class=\"checkbox-cell\">\n          <input type=\"checkbox\" data-key=\"preparatory_goals",
      "attention_span\" data-opt=\"na\"> N/A\n        </td>\n      </tr>\n      <tr>\n        <td>Task Completion — stayed on task?</td>\n        <td class=\"checkbox-cell\">\n          <input type=\"checkbox\" data-key=\"preparatory_goals"
    ],
    "pattern_recognition": [
      "return"
    ],
    "contradiction_map": [],
    "sentiment_indicators": {
      "positive": 3,
      "negative": 0,
      "uncertainty": 0
    },
    "temporal_markers": {
      "past": 2,
      "present": 7,
      "future": 1
    }
  },
  "structured_content": {
    "summary": "doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>E3 Master Builder - Ultra Simple</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <style>\n    body { font-family: Arial, sans-serif; margin: 20px; line-height: 1 container { max-width: 900px; margin: 0 auto; }\n    ...",
    "key_insights": [],
    "action_items": [
      {
        "action": "doctype html>\n<html lang=\"en\">\n<head>\n  <meta charset=\"utf-8\">\n  <title>E3 Master Builder - Ultra Simple</title>\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n  <style>\n    body { font-family: Arial, sans-serif; margin: 20px; line-height: 1",
        "urgency_score": "0.18",
        "feasibility_score": "0.50"
      },
      {
        "action": "mono { font-family: monospace; }\n  </style>\n</head>\n<body>\n  <div class=\"container\">\n    <h1>E3 Master Builder - Ultra Simple</h1>\n    \n    <div class=\"section\">\n      <h3>Step 1: Setup</h3>\n      <div class=\"form-row\">\n        <div>\n          <label>Batch ID</label>\n          <input type=\"text\" id=\"batchId\" class=\"mono\" readonly>\n        </div>\n        <div>\n          <button type=\"button\" id=\"newBatch\">New Batch</button>\n        </div>\n        <div>\n          <label>Counter</label>\n          <input type=\"number\" id=\"counter\" value=\"1\" min=\"1\">\n        </div>\n      </div>\n    </div>\n\n    <div class=\"section\">\n      <h3>Step 2: Base Data (Optional)</h3>\n      <label>JSON data to merge into all children</label>\n      <textarea id=\"baseData\" class=\"code\" placeholder='{\"record_meta\": {\"date\": \"2025-08-09\"}}'></textarea>\n    </div>\n\n    <div class=\"section\">\n      <h3>Step 3: Template</h3>\n      <div class=\"form-row\">\n        <button type=\"button\" id=\"resetTemplate\" class=\"secondary\">Load Default E3 Template</button>\n      </div>\n      <label>Child Template (use ⟦token⟧ syntax for replacements)</label>\n      <textarea id=\"template\" class=\"code\"></textarea>\n    </div>\n\n    <div class=\"section\">\n      <h3>Step 4: Actions</h3>\n      <div class=\"form-row\">\n        <button type=\"button\" id=\"preview\">Preview</button>\n        <button type=\"button\" id=\"downloadOne\">Download Single</button>\n      </div>\n      <div class=\"form-row\">\n        <input type=\"file\" id=\"bulkFile\" accept=\"",
        "urgency_score": "0.09",
        "feasibility_score": "0.66"
      },
      {
        "action": "includes(str)) {\n          result[fullKey] = 'na';\n        }\n      }\n    }\n  }\n  \n  scan(data);\n  return result;\n}\n\nfunction buildChild(template, data) {\n  // Add system data\n  if (",
        "urgency_score": "0.50",
        "feasibility_score": "0.16"
      },
      {
        "action": "createObjectURL(blob);\n  const a = document",
        "urgency_score": "0.68",
        "feasibility_score": "0.90"
      },
      {
        "action": "createElement('a');\n  a",
        "urgency_score": "0.68",
        "feasibility_score": "0.59"
      },
      {
        "action": " Your changes will be lost",
        "urgency_score": "0.36",
        "feasibility_score": "0.14"
      },
      {
        "action": "parse(baseDataText);\n    }\n    \n    const html = buildChild(template, data);\n    document",
        "urgency_score": "0.75",
        "feasibility_score": "0.62"
      },
      {
        "action": "parse(baseDataText);\n    }\n    \n    const html = buildChild(template, data);\n    const filename = 'E3-Child-' + counter + '",
        "urgency_score": "0.05",
        "feasibility_score": "0.94"
      },
      {
        "action": "isArray(bulkData)) {\n        showStatus('File must contain a JSON array', true);\n        return;\n      }\n      \n      const template = document",
        "urgency_score": "0.73",
        "feasibility_score": "0.74"
      },
      {
        "action": "assign(data, rowData);\n        \n        const html = buildChild(template, data);\n        const filename = 'E3-Child-' + (counter + index) + '",
        "urgency_score": "0.68",
        "feasibility_score": "0.01"
      }
    ],
    "unresolved_tensions": []
  },
  "cognitive_analysis": {
    "novelty_index": 0.9333333333333333,
    "cognitive_load_estimate": 0.8296,
    "recursive_potential": "Medium",
    "meta_patterns": [
      "15 themes, 0 tensions"
    ]
  },
  "metadata": {
    "fusion_methodology": "Comprehensive Cognitive Analysis Engine",
    "confidence_level": "0.42",
    "recommended_next_steps": [
      "Continue unified analysis",
      "Review 0 insights",
      "Execute 10 actions"
    ],
    "recursive_potential": "Medium",
    "text_sha256": "235bd2427208b6706424f5ba90a192c6"
  }
}
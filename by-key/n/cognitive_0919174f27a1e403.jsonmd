{
  "json_md_fusion_scroll": {
    "version": "cognitive-2.0",
    "timestamp": "2025-08-11T15:15:38.378Z",
    "source_text_length": 4283,
    "word_count": 449,
    "sentence_count": 41,
    "cognitive_mode": "unified",
    "processing_depth": "standard",
    "analysis_threshold": 0.6,
    "anchor_id": "0919174f27a1e40388c3e50d3cf64feb",
    "entropy_level": 0.927,
    "contradictions_detected": 2,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "cognitive_jsonmd_fusion",
    "source_metadata": {
      "filename": "9b68754e96e31424d85a518fb36b21d15ab9239815487ac5e4e5708a1c7ca732_feedin_1754897461405.json",
      "processing_timestamp": "2025-08-11T15:15:38.378Z",
      "scanner_version": "Cognitive JSONMD Working Edition"
    }
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "const",
        "frequency": 18,
        "significance": "0.0401",
        "examples": [
          "\"const\",\n"
        ]
      },
      {
        "theme": "list",
        "frequency": 17,
        "significance": "0.0379",
        "examples": [
          "\"list\",\n"
        ]
      },
      {
        "theme": "theme",
        "frequency": 15,
        "significance": "0.0334",
        "examples": [
          "\"main_themes\":"
        ]
      },
      {
        "theme": "frequency",
        "frequency": 11,
        "significance": "0.0245",
        "examples": [
          "\"frequency_resonance\":"
        ]
      },
      {
        "theme": "anchors",
        "frequency": 9,
        "significance": "0.0200",
        "examples": [
          "\"anchors\",\n"
        ]
      },
      {
        "theme": "sample",
        "frequency": 7,
        "significance": "0.0156",
        "examples": [
          "\"sample\":"
        ]
      },
      {
        "theme": "return",
        "frequency": 6,
        "significance": "0.0134",
        "examples": [
          "\"return\",\n"
        ]
      },
      {
        "theme": "content",
        "frequency": 5,
        "significance": "0.0111",
        "examples": [
          "Content"
        ]
      },
      {
        "theme": "length",
        "frequency": 5,
        "significance": "0.0111",
        "examples": [
          "if(!list.length){"
        ]
      },
      {
        "theme": "innerhtml",
        "frequency": 5,
        "significance": "0.0111",
        "examples": [
          "box.innerHTML"
        ]
      },
      {
        "theme": "payload",
        "frequency": 5,
        "significance": "0.0111",
        "examples": [
          "a.payload?.\"\n"
        ]
      },
      {
        "theme": "evolution",
        "frequency": 4,
        "significance": "0.0089",
        "examples": [
          "Evolution"
        ]
      }
    ],
    "key_questions": [
      "cfg || {};\"\n      }\n    ]\n  },\n  \"structured_content\": {\n    \"key_questions\": [\n      \"const fmt = (x)=>x==null?\",\n      \"mode==='deep'",
      "?\",\n      \"payload",
      "?\",\n      \"parentId",
      "?\"\n    ],\n    \"summary\": \"const, value, cfg, anchors, anchor\"\n  },\n  \"sentiment_indicators\": {\n    \"positive\": 11,\n    \"negative\": 1,\n    \"uncertainty\": 0\n  },\n  \"temporal_markers\": [\n    \"was\"\n  ],\n  \"metadata\": {\n    \"source_name\": \"session_bootstrapper_anchor_protocol_offline_html",
      "What are the deeper implications of const?\n2",
      "How does const connect to broader patterns?\n3",
      "What are the deeper implications of list?\n4",
      "How does list connect to broader patterns?\n5"
    ],
    "pattern_recognition": [
      "recursive",
      "cycle",
      "return",
      "iteration",
      "pattern"
    ],
    "contradiction_map": [
      {
        "statement_a": "length){ alert('No anchors y",
        "statement_b": "); return; } const latest = list[0]; const c = latest",
        "line": 19,
        "tension_type": "explicit_contradiction",
        "severity": "0.48"
      },
      {
        "statement_a": "length){ alert('No anchors y",
        "statement_b": "); return; } const latest = list[0]; const c = latest",
        "line": 21,
        "tension_type": "explicit_contradiction",
        "severity": "0.31"
      }
    ],
    "sentiment_indicators": {
      "positive": 1,
      "negative": 1,
      "uncertainty": 2
    },
    "temporal_markers": {
      "past": 1,
      "present": 3,
      "future": 2
    }
  },
  "structured_content": {
    "summary": "# Content Evolution - Generation 0\n\n{\n  \"analyzer_version\": \"Offline analyzer v1 5\",\n  \"processing_phase\": \"SYNTHESIS\",\n  \"frequency_resonance\": \"440 Hz (A4)\",\n  \"json_md_fusion_scroll\": {\n    \"timestamp\": \"2025-08-11T05:52:41...",
    "key_insights": [],
    "action_items": [],
    "unresolved_tensions": []
  },
  "cognitive_analysis": {
    "novelty_index": 1,
    "cognitive_load_estimate": 0.26415,
    "recursive_potential": "High",
    "meta_patterns": [
      "15 themes, 2 tensions"
    ]
  },
  "metadata": {
    "fusion_methodology": "Comprehensive Cognitive Analysis Engine",
    "confidence_level": "0.03",
    "recommended_next_steps": [
      "Continue unified analysis",
      "Review 0 insights",
      "Execute 0 actions"
    ],
    "recursive_potential": "High",
    "text_sha256": "0919174f27a1e40388c3e50d3cf64feb"
  }
}
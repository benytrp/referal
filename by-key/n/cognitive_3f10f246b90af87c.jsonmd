{
  "json_md_fusion_scroll": {
    "version": "cognitive-2.0",
    "timestamp": "2025-08-11T05:05:23.550Z",
    "source_text_length": 8712,
    "word_count": 802,
    "sentence_count": 92,
    "cognitive_mode": "unified",
    "processing_depth": "standard",
    "analysis_threshold": 0.6,
    "anchor_id": "3f10f246b90af87cced568992dc3695c",
    "entropy_level": 0.924,
    "contradictions_detected": 0,
    "processing_phase": "COGNITIVE_FUSION",
    "frequency_resonance": "659.25 Hz (E5)",
    "format": "cognitive_jsonmd_fusion",
    "source_metadata": {
      "filename": "ai_studio_code (1).html",
      "processing_timestamp": "2025-08-11T05:05:23.550Z",
      "scanner_version": "Cognitive JSONMD Working Edition"
    }
  },
  "content_analysis": {
    "main_themes": [
      {
        "theme": "const",
        "frequency": 19,
        "significance": "0.0237",
        "examples": [
          "const"
        ]
      },
      {
        "theme": "color",
        "frequency": 18,
        "significance": "0.0224",
        "examples": [
          "--border-color:"
        ]
      },
      {
        "theme": "status",
        "frequency": 15,
        "significance": "0.0187",
        "examples": [
          "--status-ok:"
        ]
      },
      {
        "theme": "ledger",
        "frequency": 15,
        "significance": "0.0187",
        "examples": [
          ".ledger-display"
        ]
      },
      {
        "theme": "data",
        "frequency": 14,
        "significance": "0.0175",
        "examples": [
          "Metadata,"
        ]
      },
      {
        "theme": "border",
        "frequency": 13,
        "significance": "0.0162",
        "examples": [
          "--border-color:"
        ]
      },
      {
        "theme": "file",
        "frequency": 11,
        "significance": "0.0137",
        "examples": [
          ".file-input"
        ]
      },
      {
        "theme": "verificationstatus",
        "frequency": 11,
        "significance": "0.0137",
        "examples": [
          "id=\"verificationStatus\""
        ]
      },
      {
        "theme": "display",
        "frequency": 10,
        "significance": "0.0125",
        "examples": [
          "display:"
        ]
      },
      {
        "theme": "font",
        "frequency": 9,
        "significance": "0.0112",
        "examples": [
          "font-family:"
        ]
      },
      {
        "theme": "json",
        "frequency": 9,
        "significance": "0.0112",
        "examples": [
          "AEON-CoT-Bridgefile.json</label>\n"
        ]
      },
      {
        "theme": "5rem",
        "frequency": 8,
        "significance": "0.0100",
        "examples": [
          "1.5rem;\n"
        ]
      }
    ],
    "key_questions": [
      "thought_ledger?",
      "entries_summary?"
    ],
    "pattern_recognition": [
      "return"
    ],
    "contradiction_map": [],
    "sentiment_indicators": {
      "positive": 0,
      "negative": 1,
      "uncertainty": 0
    },
    "temporal_markers": {
      "past": 1,
      "present": 1,
      "future": 0
    }
  },
  "structured_content": {
    "summary": "DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1 0\">\n    <title>Universal AEON Bridge Viewer</title>\n    <style>\n        :root {\n            --bg-dark: #0d121c;\n            --bg-panel: #1f2937;\n            --text-light: #e2e8f0;\n            --text-muted: #94a3b8;\n            --border-color: #374151;\n            --accent-blue: #3b82f6;\n            --status-ok: #10b981;\n            --status-warn: #f59e0b;\n            --status-err: #ef4444;\n        }\n        body {\n            font-family: -apple-system, BlinkMacSystemFont, \"Segoe UI\", Roboto, Helvetica, Arial, sans-serif, \"Apple Color Emoji\", \"Segoe UI Emoji\", \"Segoe UI Symbol\";\n            background-color: var(--bg-dark);\n            color: var(--text-light);\n            margin: 0;\n            padding: 1...",
    "key_insights": [],
    "action_items": [
      {
        "action": "className = \"status pending\";\n                return;\n            }\n            \n            // Create a deep copy for manipulation without altering the original object\n            const dataToHash = JSON",
        "urgency_score": "0.93",
        "feasibility_score": "0.88"
      }
    ],
    "unresolved_tensions": []
  },
  "cognitive_analysis": {
    "novelty_index": 0.9333333333333333,
    "cognitive_load_estimate": 0.4356,
    "recursive_potential": "Medium",
    "meta_patterns": [
      "15 themes, 0 tensions"
    ]
  },
  "metadata": {
    "fusion_methodology": "Comprehensive Cognitive Analysis Engine",
    "confidence_level": "0.68",
    "recommended_next_steps": [
      "Continue unified analysis",
      "Review 0 insights",
      "Execute 1 actions"
    ],
    "recursive_potential": "Medium",
    "text_sha256": "3f10f246b90af87cced568992dc3695c"
  }
}